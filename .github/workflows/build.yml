name: dotnet package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Test with dotnet
        run: dotnet test --no-restore --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: networking-bot-tests-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Package bot
        run: dotnet publish NetworkingBot/NetworkingBot.csproj --no-restore --no-build -o build/ -c Release /p:UseAppHost=false
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: networking-bot
          path: build
  package:
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/networking-bot-')
    needs: build
    steps:
      - name: Set Version
        run: echo "BOT_VERSION=${GITHUB_REF#refs/tags/networking-bot-}" >> $GITHUB_ENV
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v3
        with:
          yc-sa-json-credentials: $${ secrets.YC_CONTAINER_REGISTRY_CREDENTIALS }}
      - uses: actions/download-artifact@v4
        with:
          name: networking-bot
          path: build
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: $${ secrets.YC_CONTAINER_REGISTRY }}
          CR_REPOSITORY: networking-bot
          IMAGE_TAG: ${{ env.BOT_VERSION }}
        run: |
          docker build -f NetworkingBot/Dockerfile build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
